// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/internal/utils"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/models/shared"
	"net/http"
)

type GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest struct {
	// Filters requestable permissions by the ID of the app to which they belong.
	AppID *string `queryParam:"style=form,explode=true,name=app_id"`
	//     Searches permissions by the permission's group name,
	//     request configuration name, or specific integration ID.
	//
	SearchTerm *string `queryParam:"style=form,explode=true,name=search_term"`
	// Search filter should be an exact match.
	ExactMatch *bool `default:"false" queryParam:"style=form,explode=true,name=exact_match"`
	//     Filters permissions by visibility in the AppStore.
	//
	InAppStore *bool  `queryParam:"style=form,explode=true,name=in_app_store"`
	Page       *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	Size       *int64 `default:"50" queryParam:"style=form,explode=true,name=size"`
}

func (g GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetSearchTerm() *string {
	if o == nil {
		return nil
	}
	return o.SearchTerm
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetExactMatch() *bool {
	if o == nil {
		return nil
	}
	return o.ExactMatch
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetInAppStore() *bool {
	if o == nil {
		return nil
	}
	return o.InAppStore
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetRequest) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

type GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful Response
	PageRequestablePermissionOutput *shared.PageRequestablePermissionOutput
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse) GetPageRequestablePermissionOutput() *shared.PageRequestablePermissionOutput {
	if o == nil {
		return nil
	}
	return o.PageRequestablePermissionOutput
}

func (o *GetAppstorePermissionsForAppAppstoreRequestablePermissionsGetResponse) GetHTTPValidationError() *shared.HTTPValidationError {
	if o == nil {
		return nil
	}
	return o.HTTPValidationError
}
