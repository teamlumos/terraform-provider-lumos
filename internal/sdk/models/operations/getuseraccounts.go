// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/internal/utils"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/models/shared"
	"net/http"
)

type GetUserAccountsRequest struct {
	UserID string `pathParam:"style=simple,explode=false,name=user_id"`
	// Fields to expand. Supported fields: app.
	Expand []string `queryParam:"style=form,explode=true,name=expand"`
	// Page number
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Page size
	Size *int64 `default:"50" queryParam:"style=form,explode=true,name=size"`
}

func (g GetUserAccountsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetUserAccountsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetUserAccountsRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GetUserAccountsRequest) GetExpand() []string {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *GetUserAccountsRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetUserAccountsRequest) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

type GetUserAccountsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful Response
	PageAccount *shared.PageAccount
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
}

func (o *GetUserAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUserAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUserAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetUserAccountsResponse) GetPageAccount() *shared.PageAccount {
	if o == nil {
		return nil
	}
	return o.PageAccount
}

func (o *GetUserAccountsResponse) GetHTTPValidationError() *shared.HTTPValidationError {
	if o == nil {
		return nil
	}
	return o.HTTPValidationError
}
