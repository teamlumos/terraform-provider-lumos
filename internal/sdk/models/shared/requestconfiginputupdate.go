// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type RequestConfigInputUpdate struct {
	// The appstore visibility of this request config.
	AppstoreVisibility *AppStoreVisibilityOption `json:"appstore_visibility,omitempty"`
	// Indicates if allowed groups is overriden from the app-level settings.
	AllowedGroupsOverride *bool `json:"allowed_groups_override,omitempty"`
	// Refers to which group(s) can make requests to this permission.
	AllowedGroups *AllowedGroupsConfigInput `json:"allowed_groups,omitempty"`
	// A request approval config can be optionally associated with this config
	RequestApprovalConfig *RequestApprovalConfigInput `json:"request_approval_config,omitempty"`
	// A deprovisioning webhook can be optionally associated with this config.
	AccessRemovalInlineWebhook *BaseInlineWebhook `json:"access_removal_inline_webhook,omitempty"`
	// A request validation webhook can be optionally associated with this config.
	RequestValidationInlineWebhook *BaseInlineWebhook `json:"request_validation_inline_webhook,omitempty"`
	// A request fulfillment config can be optionally associated with this config
	RequestFulfillmentConfig *RequestFulfillmentConfigInputUpdate `json:"request_fulfillment_config,omitempty"`
}

func (o *RequestConfigInputUpdate) GetAppstoreVisibility() *AppStoreVisibilityOption {
	if o == nil {
		return nil
	}
	return o.AppstoreVisibility
}

func (o *RequestConfigInputUpdate) GetAllowedGroupsOverride() *bool {
	if o == nil {
		return nil
	}
	return o.AllowedGroupsOverride
}

func (o *RequestConfigInputUpdate) GetAllowedGroups() *AllowedGroupsConfigInput {
	if o == nil {
		return nil
	}
	return o.AllowedGroups
}

func (o *RequestConfigInputUpdate) GetRequestApprovalConfig() *RequestApprovalConfigInput {
	if o == nil {
		return nil
	}
	return o.RequestApprovalConfig
}

func (o *RequestConfigInputUpdate) GetAccessRemovalInlineWebhook() *BaseInlineWebhook {
	if o == nil {
		return nil
	}
	return o.AccessRemovalInlineWebhook
}

func (o *RequestConfigInputUpdate) GetRequestValidationInlineWebhook() *BaseInlineWebhook {
	if o == nil {
		return nil
	}
	return o.RequestValidationInlineWebhook
}

func (o *RequestConfigInputUpdate) GetRequestFulfillmentConfig() *RequestFulfillmentConfigInputUpdate {
	if o == nil {
		return nil
	}
	return o.RequestFulfillmentConfig
}
