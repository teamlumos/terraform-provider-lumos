// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/internal/utils"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/types"
)

type VendorAgreement struct {
	// A unique identifier for this Vendor Agreement
	ID string `json:"id"`
	// The vendor in which the agreement is created for
	Vendor Vendor `json:"vendor"`
	// The start of the current term
	StartDate *types.Date `json:"start_date"`
	// The end of the current term
	EndDate *types.Date `json:"end_date"`
	// The date by which the vendor must be notified if you want to terminate the agreement
	OptOutDate *types.Date `json:"opt_out_date"`
	// The total cost of the current service term, including all line items and true ups, and including future years for multi-year agreements.
	TotalContractCost Cost `json:"total_contract_cost"`
	// The list of currently active line items for this Vendor Agreement. If there are no currently active line items, the most recent set of line items is returned.
	LineItems []LineItem `json:"line_items"`
	// Custom metadata tracked about each of your Vendor Agreements. The set of available options must be configured within the Lumos admin panel.
	CustomAttributes map[string]VendorAgreementCustomAttributeOutput `json:"custom_attributes,omitempty"`
}

func (v VendorAgreement) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *VendorAgreement) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *VendorAgreement) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *VendorAgreement) GetVendor() Vendor {
	if o == nil {
		return Vendor{}
	}
	return o.Vendor
}

func (o *VendorAgreement) GetStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *VendorAgreement) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *VendorAgreement) GetOptOutDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.OptOutDate
}

func (o *VendorAgreement) GetTotalContractCost() Cost {
	if o == nil {
		return Cost{}
	}
	return o.TotalContractCost
}

func (o *VendorAgreement) GetLineItems() []LineItem {
	if o == nil {
		return []LineItem{}
	}
	return o.LineItems
}

func (o *VendorAgreement) GetCustomAttributes() map[string]VendorAgreementCustomAttributeOutput {
	if o == nil {
		return nil
	}
	return o.CustomAttributes
}
