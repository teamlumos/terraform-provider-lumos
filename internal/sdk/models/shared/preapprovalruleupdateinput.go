// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type PreApprovalRuleUpdateInput struct {
	// The ID of this preapproval rule.
	ID *string `json:"id,omitempty"`
	// The justification of this preapproval rule.
	Justification *string `json:"justification,omitempty"`
	// The preapproved groups of this preapproval rule.
	PreapprovedGroups []BaseGroup `json:"preapproved_groups,omitempty"`
	// The preapproved permissions of this preapproval rule.
	PreapprovedPermissions []RequestablePermissionBase `json:"preapproved_permissions,omitempty"`
	// The preapproval webhooks of this preapproval rule.
	PreapprovalWebhooks []BaseInlineWebhook `json:"preapproval_webhooks,omitempty"`
	// Users will be pre-approved only when they request for the time lengths selected here. When multiple permissions are selected, only time lengths that are valid for all of the selected permissions will show.
	TimeBasedAccess []TimeBasedAccessOptions `json:"time_based_access,omitempty"`
}

func (o *PreApprovalRuleUpdateInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PreApprovalRuleUpdateInput) GetJustification() *string {
	if o == nil {
		return nil
	}
	return o.Justification
}

func (o *PreApprovalRuleUpdateInput) GetPreapprovedGroups() []BaseGroup {
	if o == nil {
		return nil
	}
	return o.PreapprovedGroups
}

func (o *PreApprovalRuleUpdateInput) GetPreapprovedPermissions() []RequestablePermissionBase {
	if o == nil {
		return nil
	}
	return o.PreapprovedPermissions
}

func (o *PreApprovalRuleUpdateInput) GetPreapprovalWebhooks() []BaseInlineWebhook {
	if o == nil {
		return nil
	}
	return o.PreapprovalWebhooks
}

func (o *PreApprovalRuleUpdateInput) GetTimeBasedAccess() []TimeBasedAccessOptions {
	if o == nil {
		return nil
	}
	return o.TimeBasedAccess
}
