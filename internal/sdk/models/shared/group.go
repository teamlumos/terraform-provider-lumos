// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/internal/utils"
)

// Lifecycle - The lifecycle of this group.
type Lifecycle string

const (
	LifecycleSynced Lifecycle = "SYNCED"
	LifecycleNative Lifecycle = "NATIVE"
)

func (e Lifecycle) ToPointer() *Lifecycle {
	return &e
}
func (e *Lifecycle) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYNCED":
		fallthrough
	case "NATIVE":
		*e = Lifecycle(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Lifecycle: %v", v)
	}
}

type Group struct {
	// The ID of this group.
	ID *string `json:"id,omitempty"`
	// The ID of the app that owns this group.
	AppID *string `json:"app_id,omitempty"`
	// The ID of this group, specific to the integration.
	IntegrationSpecificID *string `json:"integration_specific_id,omitempty"`
	// The name of this group.
	Name *string `json:"name,omitempty"`
	// The description of this group.
	Description *string `json:"description,omitempty"`
	// The lifecycle of this group.
	GroupLifecycle *Lifecycle `default:"SYNCED" json:"group_lifecycle"`
	// The ID of the app that owns this group.
	SourceAppID *string `json:"source_app_id,omitempty"`
}

func (g Group) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *Group) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Group) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Group) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *Group) GetIntegrationSpecificID() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationSpecificID
}

func (o *Group) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Group) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Group) GetGroupLifecycle() *Lifecycle {
	if o == nil {
		return nil
	}
	return o.GroupLifecycle
}

func (o *Group) GetSourceAppID() *string {
	if o == nil {
		return nil
	}
	return o.SourceAppID
}
