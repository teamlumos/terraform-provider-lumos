// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountLifecycleStatus - NOTE: If you update this, also update UserDomainAppLifecycleStatus
//
// DISCOVERED             - Account discovered through accountfinding. Could be noisy.
//
// STAGED                 - An account that has been queued for provisioning, but is not
//
//	provisioned yet. Relevant for Apps where provisioning is async
//	(eg. Okta, OneLogin).
//
// ACCESS_CREATED         - When an account has been provisioned but not accessed.
//
// ACTIVE                 - A live, active, accessible account.
//
// SUSPENDED              - The user can no longer access the account, the license may or may not
//
//	be removed. The account can be recovered.
//
// DEPROVISIONED          - The user can no longer access the account, the license was removed,
//
//	and the account cannot be recovered.
//
// ARCHIVED               - The user can no longer access the account, the license may or may not
//
//	be removed. The account can be recovered.
//
// MANUALLY_REMOVED       - The user can no longer access the account, the license is presumably
//
//	removed, but all of this was done manually
//
// ACCESS_REMOVED         - The user can no longer access the account, but a license may still
//
//	exist. This is the case when we remove access through Okta but not a
//	direct integration
//
// NON_CORPORATE_ACCOUNT  - The account doesn't exist, or is a personal employee account.
//
// WAITING_MANUAL_REMOVAL - Waiting manual removal, someone was requested to remove the user access
//
//	from the App, and we are waiting for an answer about it.
type AccountLifecycleStatus string

const (
	AccountLifecycleStatusDiscovered           AccountLifecycleStatus = "DISCOVERED"
	AccountLifecycleStatusStaged               AccountLifecycleStatus = "STAGED"
	AccountLifecycleStatusAccessCreated        AccountLifecycleStatus = "ACCESS_CREATED"
	AccountLifecycleStatusActive               AccountLifecycleStatus = "ACTIVE"
	AccountLifecycleStatusArchived             AccountLifecycleStatus = "ARCHIVED"
	AccountLifecycleStatusSuspended            AccountLifecycleStatus = "SUSPENDED"
	AccountLifecycleStatusDeprovisioned        AccountLifecycleStatus = "DEPROVISIONED"
	AccountLifecycleStatusManuallyRemoved      AccountLifecycleStatus = "MANUALLY_REMOVED"
	AccountLifecycleStatusAccessRemoved        AccountLifecycleStatus = "ACCESS_REMOVED"
	AccountLifecycleStatusNonCorporateAccount  AccountLifecycleStatus = "NON_CORPORATE_ACCOUNT"
	AccountLifecycleStatusWaitingManualRemoval AccountLifecycleStatus = "WAITING_MANUAL_REMOVAL"
)

func (e AccountLifecycleStatus) ToPointer() *AccountLifecycleStatus {
	return &e
}
func (e *AccountLifecycleStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DISCOVERED":
		fallthrough
	case "STAGED":
		fallthrough
	case "ACCESS_CREATED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "DEPROVISIONED":
		fallthrough
	case "MANUALLY_REMOVED":
		fallthrough
	case "ACCESS_REMOVED":
		fallthrough
	case "NON_CORPORATE_ACCOUNT":
		fallthrough
	case "WAITING_MANUAL_REMOVAL":
		*e = AccountLifecycleStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountLifecycleStatus: %v", v)
	}
}
