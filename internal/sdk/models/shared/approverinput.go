// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ApproverInputGroup - Optionally, the approver can be a group.
type ApproverInputGroup struct {
	// The ID of the app that sources this group.
	AppID *string `json:"app_id,omitempty"`
	// The ID of this group.
	ID *string `json:"id,omitempty"`
	// The ID of this group, specific to the integration.
	IntegrationSpecificID *string `json:"integration_specific_id,omitempty"`
}

func (o *ApproverInputGroup) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *ApproverInputGroup) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ApproverInputGroup) GetIntegrationSpecificID() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationSpecificID
}

// ApproverInputUser - Optionally, the approver can be a user.
type ApproverInputUser struct {
	// The ID of this user.
	ID string `json:"id"`
}

func (o *ApproverInputUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type ApproverInput struct {
	// Optionally, the approver can be a group.
	Group *ApproverInputGroup `json:"group,omitempty"`
	// The type of this approver.
	Type *ApproverType `json:"type,omitempty"`
	// Optionally, the approver can be a user.
	User *ApproverInputUser `json:"user,omitempty"`
}

func (o *ApproverInput) GetGroup() *ApproverInputGroup {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *ApproverInput) GetType() *ApproverType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ApproverInput) GetUser() *ApproverInputUser {
	if o == nil {
		return nil
	}
	return o.User
}
