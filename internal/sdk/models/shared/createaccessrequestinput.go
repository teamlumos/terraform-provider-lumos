// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateAccessRequestInput struct {
	AppID string `json:"app_id"`
	// User to request access for. If omitted, request for the current user.
	TargetUserID *string `json:"target_user_id,omitempty"`
	// [Deprecated - use business_justification] Why the user needs access.
	Note *string `json:"note,omitempty"`
	// Why the user needs access.
	BusinessJustification *string `json:"business_justification,omitempty"`
	// [Deprecated, use access_length] Once granted, how long the access should last. Omit for permanent access.
	ExpirationInSeconds *int64 `json:"expiration_in_seconds,omitempty"`
	// Once granted, how long the access should last. Omit for permanent access. All possible values are '2 hours', '4 hours', '8 hours', '12 hours', '1 day', '2 days', '3 days', '7 days', '14 days', '30 days', '90 days', 'Unlimited', but the exact options depend on the settings of the app and permissions.
	AccessLength *string `json:"access_length,omitempty"`
	// The IDs of the requestable permissions the user is requesting access to. Omit this to just request access to the app.
	RequestablePermissionIds []string `json:"requestable_permission_ids,omitempty"`
}

func (o *CreateAccessRequestInput) GetAppID() string {
	if o == nil {
		return ""
	}
	return o.AppID
}

func (o *CreateAccessRequestInput) GetTargetUserID() *string {
	if o == nil {
		return nil
	}
	return o.TargetUserID
}

func (o *CreateAccessRequestInput) GetNote() *string {
	if o == nil {
		return nil
	}
	return o.Note
}

func (o *CreateAccessRequestInput) GetBusinessJustification() *string {
	if o == nil {
		return nil
	}
	return o.BusinessJustification
}

func (o *CreateAccessRequestInput) GetExpirationInSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpirationInSeconds
}

func (o *CreateAccessRequestInput) GetAccessLength() *string {
	if o == nil {
		return nil
	}
	return o.AccessLength
}

func (o *CreateAccessRequestInput) GetRequestablePermissionIds() []string {
	if o == nil {
		return nil
	}
	return o.RequestablePermissionIds
}
