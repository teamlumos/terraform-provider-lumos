// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type AppStoreAppSettingsRequestFlowInput struct {
	// AppStore App visibility.
	Discoverability *AppStoreVisibility `json:"discoverability,omitempty"`
	// After the approval step, send a custom message to requesters. Markdown for links and text formatting is supported.
	CustomApprovalMessage *string `json:"custom_approval_message,omitempty"`
	// When a user makes an access request, require that their manager approves the request before moving on to additional approvals.
	RequireManagerApproval *bool `json:"require_manager_approval,omitempty"`
	// Only turn on when working with sensitive permissions to ensure a smooth employee experience.
	RequireAdditionalApproval *bool `json:"require_additional_approval,omitempty"`
	// The allowed groups associated with this config.
	AllowedGroups *AllowedGroupsConfigInput `json:"allowed_groups,omitempty"`
	// AppStore App approvers assigned.
	Approvers *AppApproversInput `json:"approvers,omitempty"`
	// AppStore App stage 2 approvers assigned.
	ApproversStage2 *AppApproversInput `json:"approvers_stage_2,omitempty"`
	// AppStore App admins assigned.
	Admins *AppAdminsInput `json:"admins,omitempty"`
	// A request validation webhook can be optionally associated with this app.
	RequestValidationInlineWebhook *BaseInlineWebhook `json:"request_validation_inline_webhook,omitempty"`
}

func (o *AppStoreAppSettingsRequestFlowInput) GetDiscoverability() *AppStoreVisibility {
	if o == nil {
		return nil
	}
	return o.Discoverability
}

func (o *AppStoreAppSettingsRequestFlowInput) GetCustomApprovalMessage() *string {
	if o == nil {
		return nil
	}
	return o.CustomApprovalMessage
}

func (o *AppStoreAppSettingsRequestFlowInput) GetRequireManagerApproval() *bool {
	if o == nil {
		return nil
	}
	return o.RequireManagerApproval
}

func (o *AppStoreAppSettingsRequestFlowInput) GetRequireAdditionalApproval() *bool {
	if o == nil {
		return nil
	}
	return o.RequireAdditionalApproval
}

func (o *AppStoreAppSettingsRequestFlowInput) GetAllowedGroups() *AllowedGroupsConfigInput {
	if o == nil {
		return nil
	}
	return o.AllowedGroups
}

func (o *AppStoreAppSettingsRequestFlowInput) GetApprovers() *AppApproversInput {
	if o == nil {
		return nil
	}
	return o.Approvers
}

func (o *AppStoreAppSettingsRequestFlowInput) GetApproversStage2() *AppApproversInput {
	if o == nil {
		return nil
	}
	return o.ApproversStage2
}

func (o *AppStoreAppSettingsRequestFlowInput) GetAdmins() *AppAdminsInput {
	if o == nil {
		return nil
	}
	return o.Admins
}

func (o *AppStoreAppSettingsRequestFlowInput) GetRequestValidationInlineWebhook() *BaseInlineWebhook {
	if o == nil {
		return nil
	}
	return o.RequestValidationInlineWebhook
}
