// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/internal/utils"
)

type ValueType string

const (
	ValueTypeStr         ValueType = "str"
	ValueTypeArrayOfUser ValueType = "arrayOfUser"
)

// Value - The value of the attribute for an individual Order
type Value struct {
	Str         *string
	ArrayOfUser []User

	Type ValueType
}

func CreateValueStr(str string) Value {
	typ := ValueTypeStr

	return Value{
		Str:  &str,
		Type: typ,
	}
}

func CreateValueArrayOfUser(arrayOfUser []User) Value {
	typ := ValueTypeArrayOfUser

	return Value{
		ArrayOfUser: arrayOfUser,
		Type:        typ,
	}
}

func (u *Value) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ValueTypeStr
		return nil
	}

	var arrayOfUser []User = []User{}
	if err := utils.UnmarshalJSON(data, &arrayOfUser, "", true, true); err == nil {
		u.ArrayOfUser = arrayOfUser
		u.Type = ValueTypeArrayOfUser
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Value", string(data))
}

func (u Value) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfUser != nil {
		return utils.MarshalJSON(u.ArrayOfUser, "", true)
	}

	return nil, errors.New("could not marshal union type Value: all fields are null")
}

type VendorAgreementCustomAttributeOutput struct {
	// The type of custom attribute. Only text and user options are available today
	Type VendorAgreementCustomAttributeType `json:"type"`
	// The value of the attribute for an individual Order
	Value *Value `json:"value,omitempty"`
}

func (o *VendorAgreementCustomAttributeOutput) GetType() VendorAgreementCustomAttributeType {
	if o == nil {
		return VendorAgreementCustomAttributeType("")
	}
	return o.Type
}

func (o *VendorAgreementCustomAttributeOutput) GetValue() *Value {
	if o == nil {
		return nil
	}
	return o.Value
}
