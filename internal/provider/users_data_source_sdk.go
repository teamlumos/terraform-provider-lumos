// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/teamlumos/terraform-provider-lumos/internal/provider/types"
	"github.com/teamlumos/terraform-provider-lumos/internal/sdk/models/shared"
)

func (r *UsersDataSourceModel) RefreshFromSharedPageUser(resp *shared.PageUser) {
	if resp != nil {
		r.Items = []tfTypes.User{}
		if len(r.Items) > len(resp.Items) {
			r.Items = r.Items[:len(resp.Items)]
		}
		for itemsCount, itemsItem := range resp.Items {
			var items1 tfTypes.User
			items1.Email = types.StringPointerValue(itemsItem.Email)
			items1.FamilyName = types.StringPointerValue(itemsItem.FamilyName)
			items1.GivenName = types.StringPointerValue(itemsItem.GivenName)
			items1.ID = types.StringValue(itemsItem.ID)
			if itemsItem.Status != nil {
				items1.Status = types.StringValue(string(*itemsItem.Status))
			} else {
				items1.Status = types.StringNull()
			}
			if itemsCount+1 > len(r.Items) {
				r.Items = append(r.Items, items1)
			} else {
				r.Items[itemsCount].Email = items1.Email
				r.Items[itemsCount].FamilyName = items1.FamilyName
				r.Items[itemsCount].GivenName = items1.GivenName
				r.Items[itemsCount].ID = items1.ID
				r.Items[itemsCount].Status = items1.Status
			}
		}
		r.Page = types.Int64PointerValue(resp.Page)
		r.Pages = types.Int64PointerValue(resp.Pages)
		r.Size = types.Int64PointerValue(resp.Size)
		r.Total = types.Int64PointerValue(resp.Total)
	}
}
