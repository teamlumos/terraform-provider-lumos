{
  "openapi": "3.1.0",
  "info": {
    "title": "Lumos",
    "description": "\n    The Lumos API gives you the building blocks to administer and extend Lumos programmatically.\n    Our REST API provides a management interface for the AppStore and a read interface\n    for the Lumos Core.\n    Go to https://developers.lumos.com to see our complete documentation.\n",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.lumos.com"
    }
  ],
  "paths": {
    "/apps": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Apps",
        "description": "List all of your company's apps.",
        "operationId": "listApps",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name_search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search against name, app instance identifier, and app class ID.",
              "title": "Name Search"
            },
            "description": "Search against name, app instance identifier, and app class ID."
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Search filter should be an exact match.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "Search filter should be an exact match."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_App_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "Create App",
        "description": "Create a new app.",
        "operationId": "createApp",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInputCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/categories": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get App Categories",
        "description": "Get app categories.",
        "operationId": "getAppCategories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Getappcategories"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/apps/{app_id}": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get App",
        "description": "Get an app by id.",
        "operationId": "getApp",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Core"
        ],
        "summary": "Update App",
        "description": "Update an app.",
        "operationId": "updateApp",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInputCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/settings": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Appstore App Settings",
        "description": "Get AppStore app settings.",
        "operationId": "getAppSettings",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Core"
        ],
        "summary": "Update Domain App Appstore Settings",
        "description": "Update app settings.",
        "operationId": "updateAppSettings",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppSettingInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Current User",
        "description": "Get current user",
        "operationId": "currentUser",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Users",
        "description": "List all of your company's users.",
        "operationId": "listUsers",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_term",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search for users by name or email.",
              "title": "Search Term"
            },
            "description": "Search for users by name or email."
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If a search_term is provided, only accept exact matches.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "If a search_term is provided, only accept exact matches."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_User_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get User",
        "description": "Get user by id.",
        "operationId": "getUser",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/inline_webhooks": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Inline Webhooks",
        "description": "Get available webhooks",
        "operationId": "get_inline_webhooks_inline_webhooks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InlineWebhook"
                  },
                  "type": "array",
                  "title": "Response Get Inline Webhooks Inline Webhooks Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Accounts",
        "description": "Get all accounts associated with apps at your company.",
        "operationId": "getAccounts",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "App Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Account_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/users": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Group Membership",
        "description": "Get user members by group ID.",
        "operationId": "getGroupMembership",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_User_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Group",
        "description": "Get group by ID.",
        "operationId": "getGroup",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Groups",
        "description": "Get groups synced from connected integrations",
        "operationId": "getGroups",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_specific_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters groups by integration specific ID, e.g. the group's Okta ID.",
              "title": "Integration Specific Id"
            },
            "description": "Filters groups by integration specific ID, e.g. the group's Okta ID."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters groups by name.",
              "title": "Name"
            },
            "description": "Filters groups by name."
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Search filter should be an exact match.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "Search filter should be an exact match."
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters groups by the ID of the app to which they belong.",
              "title": "App Id"
            },
            "description": "Filters groups by the ID of the app to which they belong."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Group_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/upload/{job_id}": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Upload Job State",
        "description": "Get state of an account upload job.",
        "operationId": "getUploadJobState",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStateOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/activity_logs": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Activity Logs",
        "description": "Get activity logs.",
        "operationId": "getActivityLogs",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Until"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size limit",
              "default": 50,
              "title": "Limit"
            },
            "description": "Page size limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Page offset",
              "default": 0,
              "title": "Offset"
            },
            "description": "Page offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitOffsetPage_ActivityLog_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/upload": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "Create Accounts",
        "description": "Upload accounts to an app.",
        "operationId": "postAccounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountsUploadInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStateOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/activity_records": {
      "post": {
        "tags": [
          "Core"
        ],
        "summary": "Update Activity Records",
        "description": "Update the last_login or last_activity for a given account.",
        "operationId": "activityRecords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRecordInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRecordOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/activity_records/job/{job_id}": {
      "get": {
        "tags": [
          "Core"
        ],
        "summary": "Get Activity Records Job State",
        "description": "Get the state of an activity records post-processing job.",
        "operationId": "getActivityRecordsJobState",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncTaskOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/apps/{app_id}/requestable_permissions": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Permissions For App",
        "description": "Get AppStore permissions for an application.",
        "operationId": "get_appstore_permissions_for_app_appstore_apps__app_id__requestable_permissions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Filters requestable permissions by the ID of the app to which they belong.",
              "title": "App Id"
            },
            "description": "Filters requestable permissions by the ID of the app to which they belong."
          },
          {
            "name": "search_term",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\n    Searches permissions by the permission's group name,\n    request configuration name, or specific integration ID.\n",
              "title": "Search Term"
            },
            "description": "\n    Searches permissions by the permission's group name,\n    request configuration name, or specific integration ID.\n"
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Search filter should be an exact match.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "Search filter should be an exact match."
          },
          {
            "name": "in_app_store",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\n    Filters permissions by visibility in the AppStore.\n",
              "title": "In App Store"
            },
            "description": "\n    Filters permissions by visibility in the AppStore.\n"
          },
          {
            "name": "include_inherited_configs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inherited configurations from parent app.",
              "default": true,
              "title": "Include Inherited Configs"
            },
            "description": "Include inherited configurations from parent app."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_RequestablePermissionOutput_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/requestable_permissions": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Permissions",
        "description": "Get AppStore permissions for an application.",
        "operationId": "get_appstore_permissions_appstore_requestable_permissions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filters requestable permissions by the ID of the app to which they belong.",
              "title": "App Id"
            },
            "description": "Filters requestable permissions by the ID of the app to which they belong."
          },
          {
            "name": "search_term",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\n    Searches permissions by the permission's group name,\n    request configuration name, or specific integration ID.\n",
              "title": "Search Term"
            },
            "description": "\n    Searches permissions by the permission's group name,\n    request configuration name, or specific integration ID.\n"
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Search filter should be an exact match.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "Search filter should be an exact match."
          },
          {
            "name": "in_app_store",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\n    Filters permissions by visibility in the AppStore.\n",
              "title": "In App Store"
            },
            "description": "\n    Filters permissions by visibility in the AppStore.\n"
          },
          {
            "name": "include_inherited_configs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inherited configurations from parent app.",
              "default": true,
              "title": "Include Inherited Configs"
            },
            "description": "Include inherited configurations from parent app."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_RequestablePermissionOutput_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppStore"
        ],
        "summary": "Create Appstore Requestable Permission",
        "description": "**Create a permission attached to an App in the AppStore.**\n\n\n*Required fields:*\n- app-identifier. The App should be identified either by app_id or app_class_id + app_instance_id.\n- label\n\n*Defaults:*\n- request_config:\n    - appstore_visibility: HIDDEN\n    - allowed_groups:\n        - type: ALL_GROUPS\n        - groups: []\n    - request_approval_config\n        - manager_approval: NONE\n        - request_approval_stages: []\n    - request_fulfillment_config\n        - manual_steps_needed: false\n- All other fields will have null values by default.",
        "operationId": "create_appstore_requestable_permission_appstore_requestable_permissions_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_inherited_configs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inherited configurations from parent app.",
              "default": true,
              "title": "Include Inherited Configs"
            },
            "description": "Include inherited configurations from parent app."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestablePermissionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestablePermissionOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/requestable_permissions/{permission_id}": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Permission",
        "description": "Get an AppStore permission.",
        "operationId": "get_appstore_permission_appstore_requestable_permissions__permission_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Permission Id"
            }
          },
          {
            "name": "include_inherited_configs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inherited configurations from parent app.",
              "default": true,
              "title": "Include Inherited Configs"
            },
            "description": "Include inherited configurations from parent app."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestablePermissionOutput"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStore"
        ],
        "summary": "Update Appstore Permission",
        "description": "**Update an AppStore permission.**\n\n\nAll fields present in the payload will override the permission's data.\nAny missing fields will be disregarded.\n\n    Non-updatable fields for now:\n        request_config -> request_fulfillment_config -> provisioning_group",
        "operationId": "update_appstore_permission_appstore_requestable_permissions__permission_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Permission Id"
            }
          },
          {
            "name": "include_inherited_configs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inherited configurations from parent app.",
              "default": true,
              "title": "Include Inherited Configs"
            },
            "description": "Include inherited configurations from parent app."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestablePermissionInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestablePermissionOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStore"
        ],
        "summary": "Delete Appstore Permission",
        "description": "Delete a requestable permission by ID.\n\n    Only permissions of type 'NATIVE' can be deleted.",
        "operationId": "delete_appstore_permission_appstore_requestable_permissions__permission_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/pre_approval_rules": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Pre Approval Rules For App",
        "description": "Get AppStore pre-approval rules for an app.",
        "operationId": "get_appstore_pre_approval_rules_for_app_appstore_pre_approval_rules_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filters preapproval rules by the ID of the app to which they belong.",
              "title": "App Id"
            },
            "description": "Filters preapproval rules by the ID of the app to which they belong."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_PreApprovalRuleOutput_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppStore"
        ],
        "summary": "Create Pre Approval Rule",
        "description": "Create a pre-approval rule attached to an App in the AppStore.",
        "operationId": "create_pre_approval_rule_appstore_pre_approval_rules_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreApprovalRuleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreApprovalRuleOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/pre_approval_rules/{pre_approval_rule_id}": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Pre Approval Rule",
        "description": "Get an AppStore pre-approval rule.",
        "operationId": "get_appstore_pre_approval_rule_appstore_pre_approval_rules__pre_approval_rule_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pre_approval_rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Approval Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreApprovalRuleOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStore"
        ],
        "summary": "Update Pre Approval Rule",
        "description": "**Update a pre-approval rule attached to an App in the AppStore.**\n\nAll fields present in the payload will override the pre-approval rule's data.\nAny missing fields will be disregarded.",
        "operationId": "update_pre_approval_rule_appstore_pre_approval_rules__pre_approval_rule_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pre_approval_rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Approval Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreApprovalRuleUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreApprovalRuleOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStore"
        ],
        "summary": "Delete Pre Approval Rule",
        "description": "Delete a pre-approval rule by ID.",
        "operationId": "delete_pre_approval_rule_appstore_pre_approval_rules__pre_approval_rule_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pre_approval_rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Approval Rule Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/apps/{app_id}/settings": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore App Settings",
        "description": "Get AppStore app settings.",
        "operationId": "getAppStoreAppSettings",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreAppSettingsOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStore"
        ],
        "summary": "Update Appstore App Settings",
        "description": "Update AppStore app settings.",
        "operationId": "updateAppStoreAppSettings",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreAppSettingsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreAppSettingsOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/apps": {
      "post": {
        "tags": [
          "AppStore"
        ],
        "summary": "Add App To Appstore",
        "description": "Add app to AppStore with given settings.",
        "operationId": "addAppToAppStore",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAppToAppStoreInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreAppSettingsOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore Apps",
        "description": "List all AppStore apps.",
        "operationId": "getAppStoreApps",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters apps by the ID of the app.",
              "title": "App Id"
            },
            "description": "Filters apps by the ID of the app."
          },
          {
            "name": "name_search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search against name, app instance identifier, and app class ID.",
              "title": "Name Search"
            },
            "description": "Search against name, app instance identifier, and app class ID."
          },
          {
            "name": "exact_match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Search filter should be an exact match.",
              "default": false,
              "title": "Exact Match"
            },
            "description": "Search filter should be an exact match."
          },
          {
            "name": "all_visibilities",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get all apps in the AppStore regardless of visibility. Only available to admins.",
              "default": false,
              "title": "All Visibilities"
            },
            "description": "Get all apps in the AppStore regardless of visibility. Only available to admins."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_AppStoreApp_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/apps/{app_id}": {
      "delete": {
        "tags": [
          "AppStore"
        ],
        "summary": "Remove App From Appstore",
        "description": "Remove app from AppStore.",
        "operationId": "removeAppFromAppStore",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Appstore App",
        "description": "Get AppStore app.",
        "operationId": "getAppStoreApp",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreApp"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/access_requests/{id}": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Access Request",
        "description": "Get access request by ID.",
        "operationId": "getAccessRequest",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStore"
        ],
        "summary": "Cancel Access Request",
        "description": "Cancel an access request.",
        "operationId": "cancelAccessRequest",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Reason for cancellation.",
              "title": "Reason"
            },
            "description": "Reason for cancellation."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/appstore/access_request": {
      "post": {
        "tags": [
          "AppStore"
        ],
        "summary": "Create Access Request",
        "description": "Create a request to access a specific permission in the appstore.",
        "operationId": "createAccessRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccessRequestInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccessRequest"
                  },
                  "type": "array",
                  "title": "Response Createaccessrequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/appstore/access_requests": {
      "get": {
        "tags": [
          "AppStore"
        ],
        "summary": "Get Access Requests",
        "description": "Get all access requests for the current organization.",
        "operationId": "getAccessRequests",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters requests by the ID of the target user.",
              "title": "Target User Id"
            },
            "description": "Filters requests by the ID of the target user."
          },
          {
            "name": "requester_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters requests by the ID of the requesting user.",
              "title": "Requester User Id"
            },
            "description": "Filters requests by the ID of the requesting user."
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters requests by the ID of the user.",
              "title": "User Id"
            },
            "description": "Filters requests by the ID of the user."
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupportRequestStatus"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filters requests by their status. Possible values: 'PENDING', 'PENDING_MANAGER_APPROVAL', 'MANAGER_APPROVED', 'MANAGER_DENIED', 'PENDING_APPROVAL', 'APPROVED', 'DENIED', 'EXPIRED', 'CANCELLED', 'PENDING_PROVISIONING', 'PENDING_MANUAL_PROVISIONING', 'DENIED_PROVISIONING', 'PROVISIONED', 'PENDING_MANUAL_DEPROVISIONING', 'TIME_BASED_EXPIRED', 'COMPLETED', 'REVERTING', 'REVERTED'",
              "title": "Statuses"
            },
            "description": "Filters requests by their status. Possible values: 'PENDING', 'PENDING_MANAGER_APPROVAL', 'MANAGER_APPROVED', 'MANAGER_DENIED', 'PENDING_APPROVAL', 'APPROVED', 'DENIED', 'EXPIRED', 'CANCELLED', 'PENDING_PROVISIONING', 'PENDING_MANUAL_PROVISIONING', 'DENIED_PROVISIONING', 'PROVISIONED', 'PENDING_MANUAL_DEPROVISIONING', 'TIME_BASED_EXPIRED', 'COMPLETED', 'REVERTING', 'REVERTED'"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort access requests ascending (ASC) or descending (DESC) by created date.",
              "default": "ASC",
              "title": "Sort"
            },
            "description": "Sort access requests ascending (ASC) or descending (DESC) by created date."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_AccessRequest_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor_agreements": {
      "get": {
        "tags": [
          "Vendor Management"
        ],
        "summary": "Get Vendor Agreements",
        "description": "List all of your company's vendor agreements.",
        "operationId": "listVendorAgreements",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_VendorAgreement_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/found_documents": {
      "post": {
        "tags": [
          "Vendor Management"
        ],
        "summary": "Upload Found Documents",
        "description": "Upload a newly discovered document (e.g. Order Form, Quote) to Lumos for review",
        "operationId": "createFoundDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundDocumentsUpload",
                "properties": {
                  "unique_identifier": {
                    "type": "string",
                    "title": "Unique Identifier",
                    "description": "A unique identifier for the contract being uploaded. This can be an ID from an external system like Coupa, an internal ID such as a PO number, or simply the name of the file."
                  },
                  "files": {
                    "items": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array",
                    "title": "Files",
                    "description": "A list of publicly accessible URLs that direct to files related to a Vendor Agreement. For example, the Order Form, Quote, MSA, or Terms and Conditions."
                  },
                  "vendor_name": {
                    "type": "string",
                    "title": "Vendor Name",
                    "description": "The name of the vendor associated with this document"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date",
                    "description": "The start date of the attached contract"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date",
                    "description": "The end date of the attached contract"
                  },
                  "source_app_id": {
                    "type": "string",
                    "title": "Source App ID",
                    "description": "The ID of the app that sourced this document. For example, if you are using this API to create a custom Google Drive integration, you might include the ID for the Google Workspaceapp in Lumos. This determines which app's logo is displayed in Lumos."
                  },
                  "total_cost": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Cost"
                      }
                    ],
                    "title": "Total Cost",
                    "description": "The total cost of the contract. If this is a multi-year contract, this should include the cost for future years."
                  }
                },
                "type": "object",
                "required": [
                  "unique_identifier",
                  "files"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "unique_identifier": {
                    "type": "string",
                    "title": "Unique Identifier",
                    "description": "A unique identifier for the contract being uploaded. This can be an ID from an external system like Coupa, an internal ID such as a PO number, or simply the name of the file."
                  },
                  "files": {
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "type": "array",
                    "title": "Files",
                    "description": "A list of files related to a vendor agreement. For example, the Order Form, Quote, MSA, or Terms and Conditions."
                  },
                  "vendor_name": {
                    "type": "string",
                    "title": "Vendor Name",
                    "description": "The name of the vendor associated with this document"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date",
                    "description": "The start date of the attached contract"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date",
                    "description": "The end date of the attached contract"
                  },
                  "source_app_id": {
                    "type": "string",
                    "title": "Source App ID",
                    "description": "The ID of the app that sourced this document. For example, if you are using this API to create a custom Google Drive integration, you might include the ID for the Google Workspaceapp in Lumos. This determines which app's logo is displayed in Lumos."
                  }
                },
                "type": "object",
                "required": [
                  "unique_identifier",
                  "files"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Vendor Management"
        ],
        "summary": "Upload Order",
        "description": "Upload a newly discovered document (e.g. Order Form, Quote) to Lumos",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/art": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "Get Art",
        "description": "Return Lumos ASCII art. Can be used to verify the API is working.",
        "operationId": "Lumos Art.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "Get Info",
        "description": "Returns current git revision.",
        "operationId": "Lumos liveness check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Lumos Liveness Check"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/airbase/purchase_request_approved/{domain_app_uuid}": {
      "post": {
        "tags": [
          "Integration Webhooks"
        ],
        "summary": "Process Airbase Purchase Request Approved",
        "description": "Webhook for Airbase to send events as a workflow transitions through milestones",
        "operationId": "processAirbaseMilestoneEvent",
        "parameters": [
          {
            "name": "domain_app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Domain App Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirbasePurchaseRequestEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessRequest": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the access request."
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app the request is for."
          },
          "app_name": {
            "type": "string",
            "title": "App Name",
            "description": "The name of the app the request is for."
          },
          "requester_user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The user who requested access. It's possible for one user to request access on another's behalf."
          },
          "target_user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The user the request is for."
          },
          "supporter_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportRequestStatus"
              }
            ],
            "description": "The current status of the request."
          },
          "notes": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Notes",
            "description": "The reason the user wrote for putting the access request into the given state.",
            "default": {}
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "requestable_permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RequestablePermissionOutput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requestable Permissions"
          },
          "requested_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_id",
          "app_name",
          "requester_user",
          "target_user",
          "status"
        ],
        "title": "AccessRequest",
        "description": "API version of DomainAppSupportRequest."
      },
      "Account": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app that owns this account."
          },
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "The stable identifier of this account from the associated service."
          },
          "account_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "description": "The type of this account, one of 'USER', 'ROLE' (e.g. AWS), 'SERVICE' (e.g. GCP)."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "The email of this account."
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "The ID of the user associated with this account."
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "unique_identifier",
          "account_type"
        ],
        "title": "Account"
      },
      "AccountInput": {
        "properties": {
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "A unique identifier for this account, such as an account ID or email."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "The email of this account."
          },
          "first_name": {
            "type": "string",
            "title": "First Name",
            "description": "The first name of the user."
          },
          "last_name": {
            "type": "string",
            "title": "Last Name",
            "description": "The last name of the user."
          },
          "last_activity": {
            "type": "string",
            "title": "Last Activity",
            "description": "The datetime of last activity of the user."
          },
          "last_login": {
            "type": "string",
            "title": "Last Login",
            "description": "The datetime of last login of the user."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountLifecycleStatus"
              }
            ],
            "description": "The status of the account."
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionInput"
            },
            "type": "array",
            "title": "Permissions",
            "description": "The permissions of the account.",
            "default": []
          },
          "attributes": {
            "items": {
              "$ref": "#/components/schemas/AttributeInput"
            },
            "type": "array",
            "title": "Attributes",
            "description": "The attributes of the account.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "unique_identifier"
        ],
        "title": "AccountInput"
      },
      "AccountLifecycleStatus": {
        "type": "string",
        "enum": [
          "DISCOVERED",
          "STAGED",
          "ACCESS_CREATED",
          "ACTIVE",
          "ARCHIVED",
          "SUSPENDED",
          "DEPROVISIONED",
          "MANUALLY_REMOVED",
          "ACCESS_REMOVED",
          "NON_CORPORATE_ACCOUNT",
          "WAITING_MANUAL_REMOVAL"
        ],
        "title": "AccountLifecycleStatus",
        "description": "NOTE: If you update this, also update UserDomainAppLifecycleStatus\n\nDISCOVERED             - Account discovered through accountfinding. Could be noisy.\n\nSTAGED                 - An account that has been queued for provisioning, but is not\n                         provisioned yet. Relevant for Apps where provisioning is async\n                         (eg. Okta, OneLogin).\n\nACCESS_CREATED         - When an account has been provisioned but not accessed.\n\nACTIVE                 - A live, active, accessible account.\n\nSUSPENDED              - The user can no longer access the account, the license may or may not\n                         be removed. The account can be recovered.\n\nDEPROVISIONED          - The user can no longer access the account, the license was removed,\n                         and the account cannot be recovered.\n\nARCHIVED               - The user can no longer access the account, the license may or may not\n                         be removed. The account can be recovered.\n\nMANUALLY_REMOVED       - The user can no longer access the account, the license is presumably\n                         removed, but all of this was done manually\n\nACCESS_REMOVED         - The user can no longer access the account, but a license may still\n                         exist. This is the case when we remove access through Okta but not a\n                         direct integration\n\nNON_CORPORATE_ACCOUNT  - The account doesn't exist, or is a personal employee account.\n\nWAITING_MANUAL_REMOVAL - Waiting manual removal, someone was requested to remove the user access\n                         from the App, and we are waiting for an answer about it."
      },
      "AccountType": {
        "type": "string",
        "enum": [
          "USER",
          "ROLE",
          "SERVICE"
        ],
        "title": "AccountType"
      },
      "AccountsUploadInput": {
        "properties": {
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/AccountInput"
            },
            "type": "array",
            "title": "Accounts",
            "description": "Accounts to upload.",
            "default": []
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app to upload accounts to."
          }
        },
        "type": "object",
        "required": [
          "app_id"
        ],
        "title": "AccountsUploadInput"
      },
      "ActivityLog": {
        "properties": {
          "event_hash": {
            "type": "string",
            "title": "Event Hash"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "event_type_user_friendly": {
            "type": "string",
            "title": "Event Type User Friendly"
          },
          "outcome": {
            "type": "string",
            "title": "Outcome"
          },
          "targets": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Targets"
          },
          "actor": {
            "type": "object",
            "title": "Actor"
          },
          "event_began_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Began At"
          },
          "event_metadata": {
            "type": "object",
            "title": "Event Metadata"
          }
        },
        "type": "object",
        "required": [
          "event_hash",
          "event_type",
          "event_type_user_friendly",
          "outcome",
          "targets",
          "actor",
          "event_metadata"
        ],
        "title": "ActivityLog",
        "description": "API version of SIEMEvent"
      },
      "ActivityRecord": {
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityRecordAccountInput"
              }
            ],
            "description": "Metadata that Lumos can use to match the activity record to a software account within Lumos."
          },
          "event": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityRecordEventInput"
              }
            ],
            "description": "Metadata about the event being uploaded."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "The timestamp of this event, in ISO 8601 format."
          },
          "source_app_id": {
            "type": "string",
            "title": "Source App Id",
            "description": "UUID of the application in Lumos where this activity record was sourced (e.g. the ID of Okta within Lumos found by going to Apps > Find your app in the list > Click '...' > Copy Stable Identifier)"
          },
          "app": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityRecordAppInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "Metadata that Lumos can use to match the activity record to an application within Lumos."
          }
        },
        "type": "object",
        "required": [
          "account",
          "event",
          "timestamp",
          "source_app_id"
        ],
        "title": "ActivityRecord"
      },
      "ActivityRecordAccountInput": {
        "properties": {
          "external_id": {
            "type": "string",
            "title": "External Id",
            "description": "The external app's user ID for the account."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "The email associated with the account"
          }
        },
        "type": "object",
        "title": "ActivityRecordAccountInput"
      },
      "ActivityRecordAppInput": {
        "properties": {
          "instance_identifier": {
            "type": "string",
            "title": "Instance Identifier",
            "description": "The ID of the app as it is identified in the source E.g. the ID that Okta uses to identify the app"
          }
        },
        "type": "object",
        "required": [
          "instance_identifier"
        ],
        "title": "ActivityRecordAppInput"
      },
      "ActivityRecordEventInput": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityRecordEventType"
              }
            ],
            "description": "The type of event being uploaded."
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ActivityRecordEventInput"
      },
      "ActivityRecordEventType": {
        "type": "string",
        "enum": [
          "LOGIN",
          "ACTIVITY"
        ],
        "title": "ActivityRecordEventType"
      },
      "ActivityRecordInput": {
        "properties": {
          "records": {
            "items": {
              "$ref": "#/components/schemas/ActivityRecord"
            },
            "type": "array",
            "title": "Records",
            "description": "The activity records to upload."
          }
        },
        "type": "object",
        "required": [
          "records"
        ],
        "title": "ActivityRecordInput"
      },
      "ActivityRecordOutput": {
        "properties": {
          "job": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncTaskOutput"
              }
            ],
            "description": "State of the job to post-process the records."
          }
        },
        "type": "object",
        "required": [
          "job"
        ],
        "title": "ActivityRecordOutput"
      },
      "AddAppToAppStoreInput": {
        "properties": {
          "custom_request_instructions": {
            "type": "string",
            "title": "Custom Request Instructions",
            "description": "AppStore App instructions that are shown to the requester."
          },
          "request_flow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsRequestFlowInput"
              }
            ],
            "description": "Request flow configuration to request access to app."
          },
          "provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsProvisioningInput"
              }
            ],
            "description": "Provisioning flow configuration to request access to app."
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app to add to the app store."
          }
        },
        "type": "object",
        "required": [
          "app_id"
        ],
        "title": "AddAppToAppStoreInput"
      },
      "AirbasePurchaseRequestEvent": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "title": "Object"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "created_date": {
            "type": "string",
            "title": "Created Date"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object",
          "type",
          "created_date",
          "data"
        ],
        "title": "AirbasePurchaseRequestEvent",
        "description": "Model of the input we'll get from Airbase's webhook call.\nAll events seem to follow this same base structure, it is just `data` that is different\nfor each. We are using `dict` here to be permissive to other webhook events (so we can warn if\nthe customer misconfigures for a different webhook), and we actually only use 2 fields from it."
      },
      "AllowedGroupsConfigInput": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigType"
              }
            ],
            "description": "The type of this allowed groups config, can be all groups or specific.",
            "default": "ALL_GROUPS"
          },
          "groups": {
            "items": {
              "$ref": "#/components/schemas/BaseGroup"
            },
            "type": "array",
            "title": "Groups",
            "description": "The groups allowed to request this permission."
          }
        },
        "type": "object",
        "title": "AllowedGroupsConfigInput"
      },
      "AllowedGroupsConfigOutput": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigType"
              }
            ],
            "description": "The type of this allowed groups config, can be all groups or specific.",
            "default": "ALL_GROUPS"
          },
          "groups": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array",
            "title": "Groups",
            "description": "The groups allowed to request this permission.",
            "default": []
          }
        },
        "type": "object",
        "title": "AllowedGroupsConfigOutput"
      },
      "AllowedGroupsConfigType": {
        "type": "string",
        "enum": [
          "ALL_GROUPS",
          "SPECIFIED_GROUPS"
        ],
        "title": "AllowedGroupsConfigType"
      },
      "App": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this app."
          },
          "app_class_id": {
            "type": "string",
            "title": "App Class Id",
            "description": "The non-unique ID of the service associated with this requestable permission. Depending on how it is sourced in Lumos, this may be the app's name, website, or other identifier."
          },
          "instance_id": {
            "type": "string",
            "title": "Instance Id",
            "description": "The non-unique ID of the instance associated with this app. This will be the Okta app id if it\u2019s an Okta app, or will be marked as custom_app_import if manually uploaded into Lumos."
          },
          "user_friendly_label": {
            "type": "string",
            "title": "User Friendly Label",
            "description": "The user-friendly label of this app."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainAppStatus"
              }
            ],
            "description": "The status of this app. Possible values: 'DISCOVERED', 'NEEDS_REVIEW', 'APPROVED', 'BLOCKLISTED', 'DEPRECATED'"
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/DiscoverySource"
            },
            "type": "array",
            "title": "Sources",
            "description": "The sources of this app."
          },
          "allow_multiple_permission_selection": {
            "type": "boolean",
            "title": "Allow Multiple Permission Selection",
            "description": "Determines whether users can request multiple permissions at once.This field will be removed in subsequent API versions."
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "The URL of the logo of this app."
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url",
            "description": "The URL of the website of this app."
          },
          "request_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Instructions",
            "description": "The request instructions."
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_class_id",
          "instance_id",
          "user_friendly_label",
          "status",
          "sources",
          "allow_multiple_permission_selection"
        ],
        "title": "App"
      },
      "AppAdminsInput": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/BaseGroup"
            },
            "type": "array",
            "title": "Groups",
            "description": "Groups assigned as app admins."
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/BaseUser"
            },
            "type": "array",
            "title": "Users",
            "description": "Users assigned as app admins."
          }
        },
        "type": "object",
        "title": "AppAdminsInput"
      },
      "AppAdminsOutput": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array",
            "title": "Groups",
            "description": "Groups assigned as app admins.",
            "default": []
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Users",
            "description": "Users assigned as app admins.",
            "default": []
          }
        },
        "type": "object",
        "title": "AppAdminsOutput"
      },
      "AppApproversInput": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/BaseGroup"
            },
            "type": "array",
            "title": "Groups",
            "description": "Groups assigned as support request approvers.",
            "default": []
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/BaseUser"
            },
            "type": "array",
            "title": "Users",
            "description": "Users assigned as support request approvers.",
            "default": []
          }
        },
        "type": "object",
        "title": "AppApproversInput"
      },
      "AppApproversOutput": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array",
            "title": "Groups",
            "description": "Groups assigned as support request approvers.",
            "default": []
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Users",
            "description": "Users assigned as support request approvers.",
            "default": []
          }
        },
        "type": "object",
        "title": "AppApproversOutput"
      },
      "AppInputCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the app you're creating."
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "The category of the app you're creating. Possible values: 'Accounting & Finance', 'Marketing & Analytics', 'Content & Social Media', 'Sales & Support', 'Design & Creativity', 'IT & Security', 'Developers', 'HR & Learning', 'Office & Legal', 'Communication', 'Collaboration', 'Commerce & Marketplaces', 'Other', 'Internal'"
          },
          "description": {
            "type": "string",
            "maxLength": 8192,
            "title": "Description",
            "description": "The description of the app you're creating."
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "The URL of the logo of the app you're creating."
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url",
            "description": "The URL of the website of the app you're creating."
          },
          "request_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Instructions",
            "description": "The request instructions."
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "description"
        ],
        "title": "AppInputCreate"
      },
      "AppSettingInput": {
        "properties": {
          "custom_request_instructions": {
            "type": "string",
            "title": "Custom Request Instructions",
            "description": "AppStore App instructions that are shown to the requester."
          },
          "request_flow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsRequestFlowInput"
              }
            ],
            "description": "Request flow configuration to request access to app."
          },
          "provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsProvisioningInput"
              }
            ],
            "description": "Provisioning flow configuration to request access to app."
          },
          "in_app_store": {
            "type": "boolean",
            "title": "In App Store",
            "description": "Whether the app is in the app store.",
            "default": false
          }
        },
        "type": "object",
        "title": "AppSettingInput"
      },
      "AppSettingOutput": {
        "properties": {
          "custom_request_instructions": {
            "type": "string",
            "title": "Custom Request Instructions",
            "description": "AppStore App instructions that are shown to the requester."
          },
          "request_flow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsRequestFlowOutput"
              }
            ],
            "description": "Request flow configuration to request access to app."
          },
          "provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsProvisioningOutput"
              }
            ],
            "description": "Provisioning flow configuration to request access to app."
          },
          "in_app_store": {
            "type": "boolean",
            "title": "In App Store",
            "description": "Whether the app is in the app store.",
            "default": false
          }
        },
        "type": "object",
        "title": "AppSettingOutput"
      },
      "AppStoreApp": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this app."
          },
          "app_class_id": {
            "type": "string",
            "title": "App Class Id",
            "description": "The non-unique ID of the service associated with this requestable permission. Depending on how it is sourced in Lumos, this may be the app's name, website, or other identifier."
          },
          "instance_id": {
            "type": "string",
            "title": "Instance Id",
            "description": "The non-unique ID of the instance associated with this app. This will be the Okta app id if it\u2019s an Okta app, or will be marked as custom_app_import if manually uploaded into Lumos."
          },
          "user_friendly_label": {
            "type": "string",
            "title": "User Friendly Label",
            "description": "The user-friendly label of this app."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainAppStatus"
              }
            ],
            "description": "The status of this app. Possible values: 'DISCOVERED', 'NEEDS_REVIEW', 'APPROVED', 'BLOCKLISTED', 'DEPRECATED'"
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/DiscoverySource"
            },
            "type": "array",
            "title": "Sources",
            "description": "The sources of this app."
          },
          "allow_multiple_permission_selection": {
            "type": "boolean",
            "title": "Allow Multiple Permission Selection",
            "description": "Determines whether users can request multiple permissions at once.This field will be removed in subsequent API versions."
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "The URL of the logo of this app."
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url",
            "description": "The URL of the website of this app."
          },
          "request_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Instructions",
            "description": "The request instructions."
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_class_id",
          "instance_id",
          "user_friendly_label",
          "status",
          "sources",
          "allow_multiple_permission_selection"
        ],
        "title": "AppStoreApp"
      },
      "AppStoreAppSettingsInput": {
        "properties": {
          "custom_request_instructions": {
            "type": "string",
            "title": "Custom Request Instructions",
            "description": "AppStore App instructions that are shown to the requester."
          },
          "request_flow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsRequestFlowInput"
              }
            ],
            "description": "Request flow configuration to request access to app."
          },
          "provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsProvisioningInput"
              }
            ],
            "description": "Provisioning flow configuration to request access to app."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsInput"
      },
      "AppStoreAppSettingsOutput": {
        "properties": {
          "custom_request_instructions": {
            "type": "string",
            "title": "Custom Request Instructions",
            "description": "AppStore App instructions that are shown to the requester."
          },
          "request_flow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsRequestFlowOutput"
              }
            ],
            "description": "Request flow configuration to request access to app."
          },
          "provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreAppSettingsProvisioningOutput"
              }
            ],
            "description": "Provisioning flow configuration to request access to app."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsOutput"
      },
      "AppStoreAppSettingsProvisioningInput": {
        "properties": {
          "groups_provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupProvisioningOption"
              }
            ],
            "description": "If enabled, Approvers must choose a group to provision the user to for access requests."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "If enabled, users can request an app for a selected duration. After expiry, Lumos will automatically remove user's access."
          },
          "allow_multiple_permission_selection": {
            "type": "boolean",
            "title": "Allow Multiple Permission Selection",
            "description": "Whether the app is configured to allow users to request multiple permissions in a single request"
          },
          "manual_steps_needed": {
            "type": "boolean",
            "title": "Manual Steps Needed",
            "description": "If enabled, Lumos will notify the App Admin after initial access is granted to perform additional manual steps. Note that if this option is enabled, this action must be confirmed by the App Admin in order to resolve the request."
          },
          "custom_provisioning_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Provisioning Instructions",
            "description": "Only Available if manual steps is active. During the provisioning step, Lumos will send a custom message to app admins explaining how to provision a user to the app. Markdown for links and text formatting is supported."
          },
          "provisioning_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning webhook optionally associated with this app."
          },
          "access_removal_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A deprovisioning webhook can be optionally associated with this app."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsProvisioningInput"
      },
      "AppStoreAppSettingsProvisioningOutput": {
        "properties": {
          "groups_provisioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupProvisioningOption"
              }
            ],
            "description": "If enabled, Approvers must choose a group to provision the user to for access requests."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "If enabled, users can request an app for a selected duration. After expiry, Lumos will automatically remove user's access."
          },
          "allow_multiple_permission_selection": {
            "type": "boolean",
            "title": "Allow Multiple Permission Selection",
            "description": "Whether the app is configured to allow users to request multiple permissions in a single request"
          },
          "manual_steps_needed": {
            "type": "boolean",
            "title": "Manual Steps Needed",
            "description": "If enabled, Lumos will notify the App Admin after initial access is granted to perform additional manual steps. Note that if this option is enabled, this action must be confirmed by the App Admin in order to resolve the request."
          },
          "custom_provisioning_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Provisioning Instructions",
            "description": "Only Available if manual steps is active. During the provisioning step, Lumos will send a custom message to app admins explaining how to provision a user to the app. Markdown for links and text formatting is supported."
          },
          "provisioning_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning webhook optionally associated with this config."
          },
          "access_removal_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A deprovisioning webhook can be optionally associated with this config."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsProvisioningOutput"
      },
      "AppStoreAppSettingsRequestFlowInput": {
        "properties": {
          "discoverability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreVisibility"
              }
            ],
            "description": "AppStore App visibility."
          },
          "custom_approval_message": {
            "type": "string",
            "title": "Custom Approval Message",
            "description": "After the approval step, send a custom message to requesters. Markdown for links and text formatting is supported."
          },
          "require_manager_approval": {
            "type": "boolean",
            "title": "Require Manager Approval",
            "description": "When a user makes an access request, require that their manager approves the request before moving on to additional approvals."
          },
          "require_additional_approval": {
            "type": "boolean",
            "title": "Require Additional Approval",
            "description": "Only turn on when working with sensitive permissions to ensure a smooth employee experience."
          },
          "allowed_groups": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The allowed groups associated with this config."
          },
          "approvers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversInput"
              }
            ],
            "description": "AppStore App approvers assigned."
          },
          "approvers_stage_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversInput"
              }
            ],
            "description": "AppStore App stage 2 approvers assigned."
          },
          "admins": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppAdminsInput"
              }
            ],
            "description": "AppStore App admins assigned."
          },
          "request_validation_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request validation webhook can be optionally associated with this app."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsRequestFlowInput"
      },
      "AppStoreAppSettingsRequestFlowOutput": {
        "properties": {
          "discoverability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppStoreVisibility"
              }
            ],
            "description": "AppStore App visibility."
          },
          "custom_approval_message": {
            "type": "string",
            "title": "Custom Approval Message",
            "description": "After the approval step, send a custom message to requesters. Markdown for links and text formatting is supported."
          },
          "require_manager_approval": {
            "type": "boolean",
            "title": "Require Manager Approval",
            "description": "When a user makes an access request, require that their manager approves the request before moving on to additional approvals."
          },
          "require_additional_approval": {
            "type": "boolean",
            "title": "Require Additional Approval",
            "description": "Only turn on when working with sensitive permissions to ensure a smooth employee experience."
          },
          "allowed_groups": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The allowed groups config associated with this config.",
            "default": {
              "type": "ALL_GROUPS",
              "groups": []
            }
          },
          "approvers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversOutput"
              }
            ],
            "description": "AppStore App approvers assigned.",
            "default": {
              "groups": [],
              "users": []
            }
          },
          "approvers_stage_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversOutput"
              }
            ],
            "description": "AppStore App stage 2 approvers assigned.",
            "default": {
              "groups": [],
              "users": []
            }
          },
          "admins": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppAdminsOutput"
              }
            ],
            "description": "AppStore App admins assigned.",
            "default": []
          },
          "request_validation_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request validation webhook can be optionally associated with this config."
          }
        },
        "type": "object",
        "title": "AppStoreAppSettingsRequestFlowOutput"
      },
      "AppStoreVisibility": {
        "type": "string",
        "enum": [
          "FULL",
          "LIMITED",
          "NONE"
        ],
        "title": "AppStoreVisibility"
      },
      "AppStoreVisibilityOption": {
        "type": "string",
        "enum": [
          "HIDDEN",
          "VISIBLE"
        ],
        "title": "AppStoreVisibilityOption"
      },
      "ApproverInput": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApproverType"
              }
            ],
            "description": "The type of this approver."
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseUser"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optionally, the approver can be a user."
          },
          "group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseGroup"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optionally, the approver can be a group."
          }
        },
        "type": "object",
        "title": "ApproverInput"
      },
      "ApproverOutput": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApproverType"
              }
            ],
            "description": "The type of this approver."
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optionally, the approver can be a user."
          },
          "group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Group"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optionally, the approver can be a group."
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ApproverOutput"
      },
      "ApproverType": {
        "type": "string",
        "enum": [
          "USER",
          "GROUP"
        ],
        "title": "ApproverType"
      },
      "AttributeInput": {
        "properties": {
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "The unique identifier of the custom attribute"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the attribute."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the attribute."
          }
        },
        "type": "object",
        "title": "AttributeInput"
      },
      "BaseGroup": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "The ID of this group."
          },
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id",
            "description": "The ID of the app that sources this group."
          },
          "integration_specific_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Specific Id",
            "description": "The ID of this group, specific to the integration."
          }
        },
        "type": "object",
        "title": "BaseGroup"
      },
      "BaseInlineWebhook": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this inline webhook."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "BaseInlineWebhook"
      },
      "BaseUser": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this user."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "BaseUser"
      },
      "Cost": {
        "properties": {
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency in which this cost is stored"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "The quantity of the cost in terms of the specified currency"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "Cost"
      },
      "CreateAccessRequestInput": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "target_user_id": {
            "type": "string",
            "title": "Target User Id",
            "description": "User to request access for. If omitted, request for the current user."
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "[Deprecated - use business_justification] Why the user needs access."
          },
          "business_justification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Justification",
            "description": "Why the user needs access."
          },
          "expiration_in_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration In Seconds",
            "description": "[Deprecated, use access_length] Once granted, how long the access should last. Omit for permanent access."
          },
          "access_length": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Length",
            "description": "Once granted, how long the access should last. Omit for permanent access. All possible values are '2 hours', '4 hours', '8 hours', '12 hours', '1 day', '2 days', '3 days', '7 days', '14 days', '30 days', '90 days', 'Unlimited', but the exact options depend on the settings of the app and permissions."
          },
          "requestable_permission_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requestable Permission Ids",
            "description": "The IDs of the requestable permissions the user is requesting access to. Omit this to just request access to the app."
          }
        },
        "type": "object",
        "required": [
          "app_id"
        ],
        "title": "CreateAccessRequestInput"
      },
      "DiscoverySource": {
        "type": "string",
        "enum": [
          "GSUITE_QUICK_INBOX",
          "GSUITE_DEEP_INBOX",
          "MICROSOFT_DEEP_INBOX",
          "MICROSOFT_OAUTH",
          "MICROSOFT_GCC",
          "GSUITE_OAUTH",
          "OKTA",
          "MANUAL",
          "ONELOGIN",
          "ATLASSIAN",
          "GOOGLE_CLOUD",
          "LUMOS_INTEGRATION",
          "JUMPCLOUD"
        ],
        "title": "DiscoverySource"
      },
      "DomainAppStatus": {
        "type": "string",
        "enum": [
          "DISCOVERED",
          "NEEDS_REVIEW",
          "APPROVED",
          "BLOCKLISTED",
          "DEPRECATED"
        ],
        "title": "DomainAppStatus"
      },
      "FileUpload": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileUploadType"
              }
            ],
            "description": "The type of content being uploaded. The only supported type today is 'url'"
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The data to upload. This should be a publicly accessible URL that resolves to a file"
          }
        },
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "title": "FileUpload"
      },
      "FileUploadType": {
        "type": "string",
        "enum": [
          "url"
        ],
        "const": "url",
        "title": "FileUploadType"
      },
      "FlowState": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE",
          "RUNNING",
          "NOT_STARTED"
        ],
        "title": "FlowState"
      },
      "FoundDocumentsUpload": {
        "properties": {
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "A value that can be used to uniquely identify this contract (e.g. PO number, file name, etc)"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileUpload"
            },
            "type": "array",
            "title": "Files",
            "description": "A list of URLs that resolve to files that should be attached to the Found Document"
          },
          "vendor_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Name",
            "description": "The name of the vendor that this document is for"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "The start of the vendor agreement"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "The end of the vendor agreement"
          },
          "source_app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source App Id",
            "description": "By passing the ID of an application within Lumos, it will appear as if this Found Document was sourced from that app"
          },
          "total_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Cost"
              },
              {
                "type": "null"
              }
            ],
            "description": "The total cost of the contract. If this is a multi-year contract, this should include the cost for future years"
          },
          "line_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LineItemUpload"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Items",
            "description": "The line items on the contract"
          }
        },
        "type": "object",
        "required": [
          "unique_identifier",
          "files"
        ],
        "title": "FoundDocumentsUpload"
      },
      "Group": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "The ID of this group."
          },
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id",
            "description": "The ID of the app that sources this group."
          },
          "integration_specific_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Specific Id",
            "description": "The ID of this group, specific to the integration."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of this group."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of this group."
          },
          "group_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Lifecycle"
              },
              {
                "type": "null"
              }
            ],
            "description": "The lifecycle of this group.",
            "default": "SYNCED"
          },
          "source_app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source App Id",
            "description": "The ID of the app that sources this group."
          }
        },
        "type": "object",
        "title": "Group"
      },
      "GroupProvisioningOption": {
        "type": "string",
        "enum": [
          "DIRECT_TO_USER",
          "GROUPS_AND_HIDDEN",
          "GROUPS_AND_VISIBLE"
        ],
        "title": "GroupProvisioningOption"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InlineWebhook": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this inline webhook."
          },
          "hook_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineWebhookType"
              }
            ],
            "description": "The type of this inline webhook."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of this inline webhook."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of this inline webhook."
          }
        },
        "type": "object",
        "required": [
          "id",
          "hook_type",
          "name"
        ],
        "title": "InlineWebhook"
      },
      "InlineWebhookType": {
        "type": "string",
        "enum": [
          "PRE_APPROVAL",
          "PROVISION",
          "DEPROVISION",
          "REQUEST_VALIDATION",
          "SIEM"
        ],
        "title": "InlineWebhookType"
      },
      "JobStateOutput": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id",
            "description": "The ID of the job."
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowState"
              }
            ],
            "description": "The state of the job."
          }
        },
        "type": "object",
        "required": [
          "job_id"
        ],
        "title": "JobStateOutput"
      },
      "Lifecycle": {
        "type": "string",
        "enum": [
          "SYNCED",
          "NATIVE"
        ],
        "title": "Lifecycle"
      },
      "LimitOffsetPage_ActivityLog_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ActivityLog"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset"
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "limit",
          "offset",
          "links"
        ],
        "title": "LimitOffsetPage[ActivityLog]"
      },
      "LineItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the line item as stored in Lumos"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of purchase that this line item refers to"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The number of units purchased for this line item"
          },
          "unit_cost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemUnitCost"
              }
            ],
            "description": "The unit cost of this line item"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "The start of the line item"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "The end of the line item. Null for monthly line items."
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "quantity",
          "unit_cost",
          "start_date",
          "end_date"
        ],
        "title": "LineItem"
      },
      "LineItemInput": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the line item as stored in Lumos"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of purchase that this line item refers to"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The number of units purchased for this line item"
          },
          "unit_cost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemUnitCostInput"
              }
            ],
            "description": "The per-unit cost of the line item"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "quantity",
          "unit_cost"
        ],
        "title": "LineItemInput"
      },
      "LineItemUnitCost": {
        "properties": {
          "per_month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cost"
              }
            ],
            "description": "The per unit cost associated with this line item, amortized to the cost per month"
          }
        },
        "type": "object",
        "required": [
          "per_month"
        ],
        "title": "LineItemUnitCost"
      },
      "LineItemUnitCostInput": {
        "properties": {
          "period": {
            "type": "string",
            "title": "Period",
            "description": "The period which this cost covers. Available options are per_month or per_year"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value",
            "description": "The cost in terms of the specified currency (4 decimal places supported)"
          }
        },
        "type": "object",
        "required": [
          "period",
          "value"
        ],
        "title": "LineItemUnitCostInput"
      },
      "LineItemUpload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the line item as stored in Lumos"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The number of units purchased for this line item"
          },
          "unit_cost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cost"
              }
            ],
            "description": "The unit cost of this line item"
          }
        },
        "type": "object",
        "required": [
          "name",
          "quantity",
          "unit_cost"
        ],
        "title": "LineItemUpload"
      },
      "Links": {
        "properties": {
          "first": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First",
            "examples": [
              "/api/v1/users?limit=1&offset1"
            ]
          },
          "last": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last",
            "examples": [
              "/api/v1/users?limit=1&offset1"
            ]
          },
          "self": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Self",
            "examples": [
              "/api/v1/users?limit=1&offset1"
            ]
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next",
            "examples": [
              "/api/v1/users?limit=1&offset1"
            ]
          },
          "prev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prev",
            "examples": [
              "/api/v1/users?limit=1&offset1"
            ]
          }
        },
        "type": "object",
        "required": [
          "first",
          "last",
          "self",
          "next",
          "prev"
        ],
        "title": "Links"
      },
      "ManagerApprovalOption": {
        "type": "string",
        "enum": [
          "NONE",
          "INITIAL_APPROVAL"
        ],
        "title": "ManagerApprovalOption"
      },
      "OrderInput": {
        "properties": {
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "A unique ID for the contract being uploaded. This can be an ID from an external system like Ironclad, an internal ID such as a PO number, or simply the name of the vendor + date of the contract."
          },
          "vendor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Vendor"
              }
            ],
            "description": "Information about the vendor associated with this contract. Currently, we will only support a name field."
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "The start date of the attached contract"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "The end date of the attached contract"
          },
          "opt_out_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opt Out Date",
            "description": "The date by which a vendor must be notified before terminating the order"
          },
          "auto_renewal": {
            "type": "boolean",
            "title": "Auto Renewal",
            "description": "Whether or not the contract auto-renews"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency in which the contract is being paid in ISO 4217 format"
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/LineItemInput"
            },
            "type": "array",
            "title": "Line Items",
            "description": "The list of currently active line items for this Vendor Agreement. If there are no currently active line items, the most recent set of line items is returned."
          },
          "custom_attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VendorAgreementCustomAttribute-Input"
            },
            "type": "object",
            "title": "Custom Attributes",
            "description": "Any additional attributes that you would like to save on the Order. The set of available options must be configured in advance in Lumos."
          },
          "source_app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source App Id",
            "description": "UUID of the application in Lumos where this order was sourced (e.g. the ID of Ironclad within Lumos)"
          }
        },
        "type": "object",
        "required": [
          "unique_identifier",
          "vendor",
          "start_date",
          "end_date",
          "auto_renewal",
          "line_items"
        ],
        "title": "OrderInput"
      },
      "Page_AccessRequest_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccessRequest"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[AccessRequest]"
      },
      "Page_Account_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[Account]"
      },
      "Page_AppStoreApp_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AppStoreApp"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[AppStoreApp]"
      },
      "Page_App_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/App"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[App]"
      },
      "Page_Group_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[Group]"
      },
      "Page_PreApprovalRuleOutput_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PreApprovalRuleOutput"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[PreApprovalRuleOutput]"
      },
      "Page_RequestablePermissionOutput_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RequestablePermissionOutput"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[RequestablePermissionOutput]"
      },
      "Page_User_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[User]"
      },
      "Page_VendorAgreement_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/VendorAgreement"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[VendorAgreement]"
      },
      "PermissionInput": {
        "properties": {
          "unique_identifier": {
            "type": "string",
            "title": "Unique Identifier",
            "description": "The unique identifier of the permission."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of the permission."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the permission."
          }
        },
        "type": "object",
        "title": "PermissionInput"
      },
      "PermissionType": {
        "type": "string",
        "enum": [
          "SYNCED",
          "NATIVE"
        ],
        "title": "PermissionType"
      },
      "PreApprovalRuleInput": {
        "properties": {
          "justification": {
            "type": "string",
            "title": "Justification",
            "description": "The justification of this preapproval rule."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "Preapproval rule time access length,"
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app associated with this pre-approval rule."
          },
          "preapproved_groups": {
            "items": {
              "$ref": "#/components/schemas/BaseGroup"
            },
            "type": "array",
            "title": "Preapproved Groups",
            "description": "The preapproved groups of this preapproval rule.",
            "default": []
          },
          "preapproved_permissions": {
            "items": {
              "$ref": "#/components/schemas/RequestablePermissionBase"
            },
            "type": "array",
            "title": "Preapproved Permissions",
            "description": "The preapproved permissions of this preapproval rule.",
            "default": []
          },
          "preapproval_webhooks": {
            "items": {
              "$ref": "#/components/schemas/BaseInlineWebhook"
            },
            "type": "array",
            "title": "Preapproval Webhooks",
            "description": "The preapproval webhooks of this preapproval rule.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "justification",
          "app_id"
        ],
        "title": "PreApprovalRuleInput"
      },
      "PreApprovalRuleOutput": {
        "properties": {
          "justification": {
            "type": "string",
            "title": "Justification",
            "description": "The justification of this preapproval rule."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "Preapproval rule time access length,"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this preapproval rule."
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app associated with this pre-approval rule."
          },
          "app_class_id": {
            "type": "string",
            "title": "App Class Id",
            "description": "The ID of the service associated with this pre-approval rule."
          },
          "app_instance_id": {
            "type": "string",
            "title": "App Instance Id",
            "description": "Optionally, an app has an identifer associated with it's particular instance."
          },
          "preapproved_groups": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array",
            "title": "Preapproved Groups",
            "description": "The preapproved groups of this preapproval rule.",
            "default": []
          },
          "preapproved_permissions": {
            "items": {
              "$ref": "#/components/schemas/RequestablePermissionBaseOutput"
            },
            "type": "array",
            "title": "Preapproved Permissions",
            "description": "The preapproved permissions of this preapproval rule.",
            "default": []
          },
          "preapproval_webhooks": {
            "items": {
              "$ref": "#/components/schemas/InlineWebhook"
            },
            "type": "array",
            "title": "Preapproval Webhooks",
            "description": "The preapproval webhooks of this preapproval rule.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "justification",
          "app_id",
          "app_class_id",
          "app_instance_id"
        ],
        "title": "PreApprovalRuleOutput"
      },
      "PreApprovalRuleUpdateInput": {
        "properties": {
          "justification": {
            "type": "string",
            "title": "Justification",
            "description": "The justification of this preapproval rule."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "Preapproval rule time access length,"
          },
          "preapproved_groups": {
            "items": {
              "$ref": "#/components/schemas/BaseGroup"
            },
            "type": "array",
            "title": "Preapproved Groups",
            "description": "The preapproved groups of this preapproval rule.",
            "default": []
          },
          "preapproved_permissions": {
            "items": {
              "$ref": "#/components/schemas/RequestablePermissionBase"
            },
            "type": "array",
            "title": "Preapproved Permissions",
            "description": "The preapproved permissions of this preapproval rule.",
            "default": []
          },
          "preapproval_webhooks": {
            "items": {
              "$ref": "#/components/schemas/BaseInlineWebhook"
            },
            "type": "array",
            "title": "Preapproval Webhooks",
            "description": "The preapproval webhooks of this preapproval rule.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "justification"
        ],
        "title": "PreApprovalRuleUpdateInput"
      },
      "RequestApprovalConfigInput": {
        "properties": {
          "request_approval_config_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Approval Config Override",
            "description": "Indicates if approval flow is overridden."
          },
          "manager_approval": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManagerApprovalOption"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manager approval can be configured as necessary to continue",
            "default": "NONE"
          },
          "require_additional_approval": {
            "type": "boolean",
            "title": "Require Additional Approval",
            "description": "Only turn on when working with sensitive permissions to ensure a smooth employee experience."
          },
          "custom_approval_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Approval Message",
            "description": "After the approval step, send a custom message to requesters. Note that the permission level approval message will override the App level approval message if custom_approval_message_override is set. Markdown for links and text formatting is supported."
          },
          "custom_approval_message_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Approval Message Override",
            "description": "Indicates if custom_approval_message is overridden."
          },
          "approvers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversInput"
              }
            ],
            "description": "AppStore App approvers assigned."
          },
          "approvers_stage_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppApproversInput"
              }
            ],
            "description": "AppStore App stage 2 approvers assigned."
          },
          "request_approval_stages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RequestApprovalStageInput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Approval Stages",
            "description": "The stages of this request approval."
          }
        },
        "type": "object",
        "title": "RequestApprovalConfigInput"
      },
      "RequestApprovalConfigOutput": {
        "properties": {
          "request_approval_config_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Approval Config Override",
            "description": "Indicates if approval flow is overridden."
          },
          "manager_approval": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManagerApprovalOption"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manager approval can be configured as necessary to continue",
            "default": "NONE"
          },
          "require_additional_approval": {
            "type": "boolean",
            "title": "Require Additional Approval",
            "description": "Only turn on when working with sensitive permissions to ensure a smooth employee experience."
          },
          "custom_approval_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Approval Message",
            "description": "After the approval step, send a custom message to requesters. Note that the permission level approval message will override the App level approval message if custom_approval_message_override is set. Markdown for links and text formatting is supported."
          },
          "custom_approval_message_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Approval Message Override",
            "description": "Indicates if custom_approval_message is overridden."
          },
          "approvers": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppApproversOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "AppStore App approvers assigned."
          },
          "approvers_stage_2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppApproversOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "AppStore App stage 2 approvers assigned."
          },
          "request_approval_stages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RequestApprovalStageOutput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Approval Stages",
            "description": "The stages of this request approval.",
            "default": [
              {}
            ]
          }
        },
        "type": "object",
        "title": "RequestApprovalConfigOutput"
      },
      "RequestApprovalStageInput": {
        "properties": {
          "approvers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ApproverInput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approvers",
            "description": "The approvers of this stage."
          }
        },
        "type": "object",
        "title": "RequestApprovalStageInput"
      },
      "RequestApprovalStageOutput": {
        "properties": {
          "approvers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ApproverOutput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approvers",
            "description": "The approvers of this stage."
          }
        },
        "type": "object",
        "title": "RequestApprovalStageOutput"
      },
      "RequestConfigInputCreate": {
        "properties": {
          "appstore_visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppStoreVisibilityOption"
              },
              {
                "type": "null"
              }
            ],
            "description": "The appstore visibility of this request config.",
            "default": "HIDDEN"
          },
          "allowed_groups_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Groups Override",
            "description": "Indicates if allowed groups is overriden from the app-level settings."
          },
          "allowed_groups": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "Refers to which group(s) can make requests to this permission."
          },
          "request_approval_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestApprovalConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request approval config can be optionally associated with this config"
          },
          "access_removal_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A deprovisioning webhook can be optionally associated with this config."
          },
          "request_validation_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request validation webhook can be optionally associated with this config."
          },
          "request_fulfillment_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestFulfillmentConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request fulfillment config can be optionally associated with this config"
          }
        },
        "type": "object",
        "title": "RequestConfigInputCreate"
      },
      "RequestConfigInputUpdate": {
        "properties": {
          "appstore_visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppStoreVisibilityOption"
              },
              {
                "type": "null"
              }
            ],
            "description": "The appstore visibility of this request config.",
            "default": "HIDDEN"
          },
          "allowed_groups_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Groups Override",
            "description": "Indicates if allowed groups is overriden from the app-level settings."
          },
          "allowed_groups": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "Refers to which group(s) can make requests to this permission."
          },
          "request_approval_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestApprovalConfigInput"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request approval config can be optionally associated with this config"
          },
          "access_removal_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A deprovisioning webhook can be optionally associated with this config."
          },
          "request_validation_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request validation webhook can be optionally associated with this config."
          },
          "request_fulfillment_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestFulfillmentConfigInputUpdate"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request fulfillment config can be optionally associated with this config"
          }
        },
        "type": "object",
        "title": "RequestConfigInputUpdate"
      },
      "RequestConfigOutput": {
        "properties": {
          "appstore_visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppStoreVisibilityOption"
              },
              {
                "type": "null"
              }
            ],
            "description": "The appstore visibility of this request config.",
            "default": "HIDDEN"
          },
          "allowed_groups_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Groups Override",
            "description": "Indicates if allowed groups is overriden from the app-level settings."
          },
          "allowed_groups": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedGroupsConfigOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The allowed groups config associated with this config.",
            "default": {
              "type": "ALL_GROUPS",
              "groups": []
            }
          },
          "request_approval_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestApprovalConfigOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request approval config can be optionally associated with this config",
            "default": {
              "manager_approval": "NONE",
              "request_approval_stages": [
                {}
              ]
            }
          },
          "request_fulfillment_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestFulfillmentConfigOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request fulfillment config can be optionally associated with this config",
            "default": {}
          },
          "access_removal_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A deprovisioning webhook can be optionally associated with this config."
          },
          "request_validation_inline_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "A request validation webhook can be optionally associated with this config."
          }
        },
        "type": "object",
        "title": "RequestConfigOutput"
      },
      "RequestFulfillmentConfigInput": {
        "properties": {
          "manual_steps_needed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Steps Needed",
            "description": "Whether manual steps are needed."
          },
          "manual_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Instructions",
            "description": "The manual instructions that go along."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "If enabled, users can request an app for a selected duration. After expiry, Lumos will automatically remove user's access."
          },
          "time_based_access_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Based Access Override",
            "description": "Indicates if time based access is overriden."
          },
          "provisioning_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseGroup"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning group optionally associated with this config."
          },
          "provisioning_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning webhook optionally associated with this config."
          }
        },
        "type": "object",
        "title": "RequestFulfillmentConfigInput"
      },
      "RequestFulfillmentConfigInputUpdate": {
        "properties": {
          "manual_steps_needed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Steps Needed",
            "description": "Whether manual steps are needed."
          },
          "manual_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Instructions",
            "description": "The manual instructions that go along."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "If enabled, users can request an app for a selected duration. After expiry, Lumos will automatically remove user's access."
          },
          "time_based_access_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Based Access Override",
            "description": "Indicates if time based access is overriden."
          },
          "provisioning_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BaseInlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning webhook optionally associated with this config."
          }
        },
        "type": "object",
        "title": "RequestFulfillmentConfigInputUpdate"
      },
      "RequestFulfillmentConfigOutput": {
        "properties": {
          "manual_steps_needed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Steps Needed",
            "description": "Whether manual steps are needed."
          },
          "manual_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Instructions",
            "description": "The manual instructions that go along."
          },
          "time_based_access": {
            "items": {
              "$ref": "#/components/schemas/TimeBasedAccessOptions"
            },
            "type": "array",
            "title": "Time Based Access",
            "description": "If enabled, users can request an app for a selected duration. After expiry, Lumos will automatically remove user's access."
          },
          "time_based_access_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Based Access Override",
            "description": "Indicates if time based access is overriden."
          },
          "provisioning_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Group"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning group optionally assocated with this config."
          },
          "provisioning_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provisioning webhook optionally associated with this config."
          }
        },
        "type": "object",
        "title": "RequestFulfillmentConfigOutput"
      },
      "RequestablePermissionBase": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this requestable permission."
          }
        },
        "type": "object",
        "title": "RequestablePermissionBase"
      },
      "RequestablePermissionBaseOutput": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this requestable permission."
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PermissionType"
              },
              {
                "type": "null"
              }
            ],
            "description": "The type of this requestable permission."
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "The label of this requestable permission."
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app associated with this requestable permission."
          },
          "app_class_id": {
            "type": "string",
            "title": "App Class Id",
            "description": "The non-unique ID of the service associated with this requestable permission. Depending on how it is sourced in Lumos, this may be the app's name, website,  or other identifier."
          },
          "app_instance_id": {
            "type": "string",
            "title": "App Instance Id",
            "description": "The ID of the instance associated with this requestable permission. This may be an empty string."
          }
        },
        "type": "object",
        "required": [
          "label",
          "app_id",
          "app_class_id",
          "app_instance_id"
        ],
        "title": "RequestablePermissionBaseOutput"
      },
      "RequestablePermissionInput": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app associated with this requestable permission."
          },
          "app_class_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Class Id",
            "description": "The ID of the service associated with this requestable permission."
          },
          "app_instance_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Instance Id",
            "description": "Optionally, an app has an identifer associated with it's particular instance."
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "The label of this requestable permission."
          },
          "request_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestConfigInputCreate"
              },
              {
                "type": "null"
              }
            ],
            "description": "The request config associated with this requestable permission."
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "label"
        ],
        "title": "RequestablePermissionInput"
      },
      "RequestablePermissionInputUpdate": {
        "properties": {
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id",
            "description": "The ID of the app associated with this requestable permission."
          },
          "app_class_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Class Id",
            "description": "The ID of the service associated with this requestable permission."
          },
          "app_instance_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Instance Id",
            "description": "Optionally, an app has an identifer associated with it's particular instance."
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label of this requestable permission."
          },
          "request_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequestConfigInputUpdate"
              },
              {
                "type": "null"
              }
            ],
            "description": "The request config associated with this requestable permission."
          }
        },
        "type": "object",
        "title": "RequestablePermissionInputUpdate"
      },
      "RequestablePermissionOutput": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this requestable permission."
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PermissionType"
              },
              {
                "type": "null"
              }
            ],
            "description": "The type of this requestable permission."
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "The label of this requestable permission."
          },
          "app_id": {
            "type": "string",
            "title": "App Id",
            "description": "The ID of the app associated with this requestable permission."
          },
          "app_class_id": {
            "type": "string",
            "title": "App Class Id",
            "description": "The non-unique ID of the service associated with this requestable permission. Depending on how it is sourced in Lumos, this may be the app's name, website,  or other identifier."
          },
          "app_instance_id": {
            "type": "string",
            "title": "App Instance Id",
            "description": "The ID of the instance associated with this requestable permission. This may be an empty string."
          },
          "request_config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestConfigOutput"
              }
            ],
            "description": "The request config associated with this requestable permission."
          }
        },
        "type": "object",
        "required": [
          "label",
          "app_id",
          "app_class_id",
          "app_instance_id",
          "request_config"
        ],
        "title": "RequestablePermissionOutput"
      },
      "RunInfoStatus": {
        "type": "string",
        "enum": [
          "RUNNING",
          "DONE"
        ],
        "title": "RunInfoStatus"
      },
      "SupportRequestStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "PENDING_MANAGER_APPROVAL",
          "MANAGER_APPROVED",
          "MANAGER_DENIED",
          "PENDING_APPROVAL",
          "APPROVED",
          "DENIED",
          "EXPIRED",
          "CANCELLED",
          "PENDING_PROVISIONING",
          "PENDING_MANUAL_PROVISIONING",
          "DENIED_PROVISIONING",
          "PROVISIONED",
          "PENDING_MANUAL_DEPROVISIONING",
          "TIME_BASED_EXPIRED",
          "COMPLETED",
          "REVERTING",
          "REVERTED"
        ],
        "title": "SupportRequestStatus"
      },
      "SyncTaskOutput": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id",
            "description": "The ID of the job."
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunInfoStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "The state of the job."
          }
        },
        "type": "object",
        "required": [
          "job_id"
        ],
        "title": "SyncTaskOutput"
      },
      "TimeBasedAccessOptions": {
        "type": "string",
        "enum": [
          "2 hours",
          "4 hours",
          "12 hours",
          "7 days",
          "14 days",
          "30 days",
          "90 days",
          "Unlimited"
        ],
        "title": "TimeBasedAccessOptions"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of this user."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "The email of this user."
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "The given name of this user."
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "The family name of this user."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserLifecycleStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "The status of this user."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "User"
      },
      "UserLifecycleStatus": {
        "type": "string",
        "enum": [
          "STAGED",
          "ACTIVE",
          "SUSPENDED",
          "INACTIVE"
        ],
        "title": "UserLifecycleStatus"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Vendor": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "A user friendly name for the vendor"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Vendor"
      },
      "VendorAgreement": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "A unique identifier for this Vendor Agreement"
          },
          "vendor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Vendor"
              }
            ],
            "description": "The vendor in which the agreement is created for"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "The start of the current term"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "The end of the current term"
          },
          "opt_out_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opt Out Date",
            "description": "The date by which the vendor must be notified if you want to terminate the agreement"
          },
          "total_contract_cost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cost"
              }
            ],
            "description": "The total cost of the current service term, including all line items and true ups, and including future years for multi-year agreements."
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/LineItem"
            },
            "type": "array",
            "title": "Line Items",
            "description": "The list of currently active line items for this Vendor Agreement. If there are no currently active line items, the most recent set of line items is returned."
          },
          "custom_attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VendorAgreementCustomAttribute-Output"
            },
            "type": "object",
            "title": "Custom Attributes",
            "description": "Custom metadata tracked about each of your Vendor Agreements. The set of available options must be configured within the Lumos admin panel."
          }
        },
        "type": "object",
        "required": [
          "id",
          "vendor",
          "start_date",
          "end_date",
          "opt_out_date",
          "total_contract_cost",
          "line_items"
        ],
        "title": "VendorAgreement"
      },
      "VendorAgreementCustomAttribute-Input": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VendorAgreementCustomAttributeType"
              }
            ],
            "description": "The type of custom attribute. Only text and user options are available today"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/User"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "The value of the attribute for an individual Order"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "VendorAgreementCustomAttribute"
      },
      "VendorAgreementCustomAttribute-Output": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VendorAgreementCustomAttributeType"
              }
            ],
            "description": "The type of custom attribute. Only text and user options are available today"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/User"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "The value of the attribute for an individual Order"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "VendorAgreementCustomAttribute"
      },
      "VendorAgreementCustomAttributeType": {
        "type": "string",
        "enum": [
          "TEXT",
          "USER",
          "SINGLE_SELECT"
        ],
        "title": "VendorAgreementCustomAttributeType"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}